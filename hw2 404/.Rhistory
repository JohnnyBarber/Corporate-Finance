p.next = p.now*(1+ret.CAPM)
print(p.next)
#c)
div = 2
p.div = p.now - 2
print(p.div)
p.div = p.next - div
print(p.div)
#2--------------------------
#a)
b.a = (0.32-0.02)/(0.2-0.05)
b.d = (0.14-0.035)/(0.2-0.05)
print(b.a,b.d)
print(c(b.a,b.d))
#b)
ret.mkt = 0.5*0.05 + 0.5*0.2
ret.a = b.a*ret.mkt
ret.d = b.d*ret.mkt
print(c(ret.a,ret.d))
ret.a = (0.02+0.32)/2
ret.d = (0.035+0.14)/2
print(c(ret.a,ret.d))
#c)
ret.mkt = 0.5*0.05 + 0.5*0.2
print(c(b.a,b.d))
ret.mkt
limit.b = c(0,1)
limit.E = c(0.08, ret.mkt)
plot(limit.b,limit.E, type = "l")
plot(limit.b,limit.E, type = "l",pch = 20)
plot(limit.b,limit.E, type = "l",pch = 50)
?plot
plot(limit.b,limit.E, type = "l")
#d)
points(b.a,ret.a)
points(b.d,ret.d)
b.a
b.d
plot(limit.b,limit.E, type = "l", xlim = c(0,5), ylime = c(0,1))
limit.b = c(0,1)
limit.E = c(0, ret.mkt)
plot(limit.b,limit.E, type = "l", xlim = c(0,5), ylime = c(0,1))
plot(limit.b,limit.E, type = "l", xlim = c(0,5), ylim = c(0,1))
#d)
points(b.a,ret.a)
points(b.d,ret.d)
plot(limit.b,limit.E, type = "l", xlim = c(0,3), ylim = c(0,0.4))
#d)
points(b.a,ret.a)
points(b.d,ret.d)
ret.d
0.0075/b.d
?abline
plot(limit.b,limit.E, type = "l", xlim = c(0,3), ylim = c(0,0.4))
abline(0.08,(ret.d-0.08)/b.d)
ret.d-0.08
ret.d-0.08
(ret.d-0.08)/b.d
abline(ret.mkt,(ret.d-0.08)/b.d)
ret.mkt
abline(0.08,(ret.d-0.08)/b.d)
limit.b
limit.E
abline(0,ret.mkt)
plot(limit.b,limit.E, type = "l", xlim = c(0,3), ylim = c(0,0.4))
abline(0,ret.mkt)
#d)
points(b.a,ret.a)
points(b.d,ret.d)
ret.mkt
abline(0.08,ret.mkt-0.08)
plot(limit.b,limit.E, type = "l", xlim = c(0,3), ylim = c(0,0.4))
abline(0.08,ret.mkt-0.08)
limit.b = c(0,1)
limit.E = c(0.08, ret.mkt)
plot(limit.b,limit.E, type = "l", xlim = c(0,3), ylim = c(0,0.4))
abline(0.08,ret.mkt-0.08)
#d)
points(b.a,ret.a)
points(b.d,ret.d)
?points
ret.CAPM = 0.05 + 1.4*0.06
print(ret.CAPM)
#b)
p.now = 35
p.next = p.now*(1+ret.CAPM)
print(p.next)
#c)
div = 2
p.div = p.next - div
print(p.div)
#2--------------------------
#a)
b.a = (0.32-0.02)/(0.2-0.05)
b.d = (0.14-0.035)/(0.2-0.05)
beta = c(b.a,b.d)
names(beta) = c("aggressive", "defensive")
print(c(b.a,b.d))
#b)
ret.a = (0.02+0.32)/2
ret.d = (0.035+0.14)/2
return = c(ret.a,ret.d)
names(return) = c("aggressive", "defensive")
print(c(ret.a,ret.d))
#c)
ret.mkt = 0.5*0.05 + 0.5*0.2
limit.b = c(0,1)
limit.E = c(0.08, ret.mkt)
plot(limit.b,limit.E, type = "l", xlim = c(0,3), ylim = c(0,0.4))
rf = 0.08
slope = ret.mkt-0.08
abline(rf,slope)
#d)
points(b.a,ret.a, pch = 19)
points(b.d,ret.d, pch = 19)
text(b.a, ret.a, labels = "Aggressive")
text(b.d,ret.d, labels = "Defensive")
a.a = ret.a - (rf+slope*b.a)
a.d = ret.b - (rf+slope*b.d)
alpha = c(a.a,a.d)
names(alpha) = c("aggressive", "defensive")
print(alpha)
plot(limit.b,limit.E, type = "l", xlim = c(0,3), ylim = c(0,0.4))
rf = 0.08
slope = ret.mkt-0.08
abline(rf,slope)
#d)
points(b.a,ret.a, pch = 19)
points(b.d,ret.d, pch = 19)
text(b.a, ret.a, labels = "Aggressive", pos = 3)
text(b.d,ret.d, labels = "Defensive", pos = 1)
a.a = ret.a - (rf+slope*b.a)
a.d = ret.b - (rf+slope*b.d)
alpha = c(a.a,a.d)
names(alpha) = c("aggressive", "defensive")
print(alpha)
plot(limit.b,limit.E, type = "l", xlim = c(0,3), ylim = c(0,0.4),
main = "Security Market Line")
rf = 0.08
slope = ret.mkt-0.08
abline(rf,slope)
#d)
points(b.a,ret.a, pch = 19)
points(b.d,ret.d, pch = 19)
text(b.a, ret.a, labels = "Aggressive", pos = 3)
text(b.d,ret.d, labels = "Defensive", pos = 1)
a.a = ret.a - (rf+slope*b.a)
a.d = ret.b - (rf+slope*b.d)
alpha = c(a.a,a.d)
names(alpha) = c("aggressive", "defensive")
print(alpha)
setwd("C:/Users/Jiaqi Li/Desktop/hw2 404")
snp = read.csv("sp500_stock_data.csv")
p.all = which(!is.na(snp$PAYDT))
event = snp[p.all,]
n = length(p.all)
pos = vector()
for (i in 2:n)
{
if (snp$TICKER[p.all[i]] != snp$TICKER[p.all[i]-21]
|| snp$TICKER[p.all[i]] != snp$TICKER[p.all[i]+20])
{
pos = append(pos,i)
}
}
p = p.all[-pos]
p = p.all[-1]
event = event[-pos,]
event = event[-1,]
row = c()
for (i in 1:length(p))
{
row = c(row,snp$RETX[(p[i]-20):(p[i]+20)])
}
head(row)
snp$RETX[(p[1]-20):(p[1]+20)]
row = matrix(0,nrow = 41)
for (i in 1:length(p))
{
row = cbind(row,snp$RETX[(p[i]-20):(p[i]+20)])
}
head(row)
row[1,1]
row[1,2]
row[1,]
row = matrix(0,nrow = 41)
row = cbind(row,snp$RETX[(p[1]-20):(p[1]+20)])
row
p[1]
snp$RETX[(p[1]-20):(p[1]+20)]
row = matrix(0,ncol = 41)
for (i in 1:length(p))
{
row = rbind(row,snp$RETX[(p[i]-20):(p[i]+20)])
}
row[,1]
length(p)
p.all = which(!is.na(snp$PAYDT))
event = snp[p.all,]
n = length(p.all)
pos = vector()
for (i in 2:n)
{
if (snp$TICKER[p.all[i]] != snp$TICKER[p.all[i]-21]
|| snp$TICKER[p.all[i]] != snp$TICKER[p.all[i]+20])
{
pos = append(pos,i)
}
}
p = p.all[-pos]
p = p.all[-1]
length(p)
length(pos)
pos
length(p.all)
p = p.all[-pos]
lenth(p)
length(p)
p = p.all[-pos]
p = p[-1]
row = matrix(0,ncol = 41)
for (i in 1:length(p))
{
row = rbind(row,snp$RETX[(p[i]-20):(p[i]+20)])
}
row[1,]
row[2,]
p[1]
snp$RETX[(p[1]-20):(p[1]+20)]
length(snp$RETX[(p[1]-20):(p[1]+20)])
length(p)
row = matrix(0,ncol = 41)
for (i in 1:length(p))
{
row = rbind(row,snp$RETX[(p[i]-20):(p[i]+20)])
}
row[1,]
row[2,]
snp$RETX[(p[1]-20):(p[1]+20)]
row
snp$RETX[(p[1]-20):(p[1]+20)]
snp$RETX[(p[2]-20):(p[2]+20)]
snp$RETX[(p[100]-20):(p[100]+20)]
rbind(snp$RETX[(p[1]-20):(p[1]+20)],snp$RETX[(p[2]-20):(p[2]+20)])
class(snp$RETX[(p[1]-20):(p[1]+20)])
as.vector(snp$RETX[(p[1]-20):(p[1]+20)])
as.numeric(snp$RETX[(p[1]-20):(p[1]+20)])
as.numberic(as.vector(snp$RETX[(p[1]-20):(p[1]+20)]))
as.numeric(as.vector(snp$RETX[(p[1]-20):(p[1]+20)]))
row = matrix(0,ncol = 41)
for (i in 1:length(p))
{
row = rbind(row,as.numeric(as.vector(snp$RETX[(p[i]-20):(p[i]+20)])))
}
head(row)
row_M = matrix(0,ncol = 41)
row_RETX = matrix(0,ncol = 41)
row_M = matrix(0,ncol = 41)
for (i in 1:length(p))
{
row_RETX = rbind(row,as.numeric(as.vector(snp$RETX[(p[i]-20):(p[i]+20)])))
row_M = rbind(row,as.numeric(as.vector(snp$sprtrn[(p[i]-20):(p[i]+20)])))
}
row_RETX = matrix(0,ncol = 41)
row_M = matrix(0,ncol = 41)
for (i in 1:length(p))
{
row_RETX = rbind(row,as.numeric(as.vector(snp$RETX[(p[i]-20):(p[i]+20)])))
row_M = rbind(row,as.numeric(as.vector(snp$sprtrn[(p[i]-20):(p[i]+20)])))
}
ExcR = row_RETX - row_M
sum(is.na(ExcE))
sum(is.na(ExcR))
ExcR
sum(is.na(row_M))
sum(is.na(row_RETX))
head(row_RETX)
row_RETX = row_RETX[-1,]
row_M = row_M[-1,]
ER = row_RETX-row_M
head(ER)
tail(ER)
row_RETX[is.na(row_RETX)] = 0
sum(is.na)
sum(is.na(row_RETX))
row_M[is.na(row_M)] = 0
ER = row_RETX-row_M
mu = vector()
for (i in range(1:41)) {mu = append(mu,mean(ER[,i]))}
plot(mu)
row_EXR = matrix(0,ncol = 41)
for (i in 1:length(p))
{
row_EXR = rbind(row,as.numeric(as.vector(snp$RETX[(p[i]-20):(p[i]+20)]))
-as.numeric(as.vector(snp$sprtrn[(p[i]-20):(p[i]+20)])))
}
row_EXR = row_EXR[-1,]
row_EXR
sum(is.na(row_EXR))
row_EXR[is.na(row_EXR)] = 0
mu = vector()
for (i in range(1:41)) {mu = append(mu,mean(ER[,i]))}
plot(mu)
mu
head(ER)
mu = vector()
for (i in range(1:41)) {mu = append(mu,mean(row_EXR[,i]))}
plot(mu)
mu
row_EXR
mu = vector()
for (i in 1:41) { mu = append(mu,mean(row_EXR[,i]))}
mu
plot(mu)
plot(mu, type = "l")
library(readxl)
library(xts)
library(data.table)
setwd("C:/Users/Jiaqi Li/Desktop")
library(readxl)
library(xts)
library(data.table)
RM1<-read_excel("Return Matrix.xlsx")
RM1$`Names Date`<- as.Date(as.character(RM1$`Names Date`), "%Y%m%d")
RM1$Excess_Return<-RM1$`Returns without Dividends`-RM1$`Return on the S&P 500 Index`
RM1$Excess_Return[is.na(RM1$Excess_Return)] <-0
p<-which(!is.na(RM1$`Payment Date`))
rexcess <- matrix(0, nrow = 41)
mean<-c()
for (i in p){
if (i>20){
if (RM1$`Names Date`[i+20]>RM1$`Names Date`[i] && RM1$`Names Date`[i-20]<RM1$`Names Date`[i]){
rexcess<-cbind(rexcess,RM1$Excess_Return[(i-20):(i+20)])
}
}
}
for (i in 1:41){
mean[i]<-mean(rexcess[i,])
}
plot(mean,type = "l",xlab="Time Period",ylab="Excess Return",mean="Event Study")
abline(v=21,col="red")
for (i in 1:41){
mean[i]<-mean(rexcess[i,])
}
plot(mean,type = "o",xlab="Time Period",ylab="Excess Return",mean="Event Study")
abline(v=21,col="red")
plot(mu, type = "o")
plot(mu, type = "o", title = "Event Study",
xlim = "Excess Return", ylim = "Day")
?plot
plot(mu, type = "o", title = "Event Study",
xlab = "Excess Return", ylab = "Day")
plot(mu, type = "o", title = "Event Study",
ylab = "Excess Return", xlab = "Day")
plot(mu, type = "o", main = "Event Study",
ylab = "Excess Return", xlab = "Day")
#1---------------------
b0 = runif(1,10.00,20.00)
b1 = 1.1
b2 = -0.25
#1---------------------
b0 = runif(1,10.0,20.0)
#1---------------------
b0 = round(runif(1,10.0,20.0),2)
b1 = 1.1
b2 = -0.25
MySeq = rnorm(1000, mean = 10, sd = 2)
MySeq = rnorm(2)
b0 = round(runif(1,10.0,20.0),2)
b1 = 1.1
b2 = -0.25
MySeq = rnorm(2)
for (i in 2:1000)
{
MySeq = append(MySeq, b0+b1*MySeq[i]+b2*MySeq[i-1])
}
plot(MySeq)
acf(MySeq)
?acf
acf(MySeq, lag.max = 20)
head(MySeq)
b0 = round(runif(1,1.0,5.0),2)
b1 = 1.1
b2 = -0.25
MySeq = rnorm(2)
for (i in 2:1000){
MySeq = append(MySeq, b0+b1*MySeq[i]+b2*MySeq[i-1])
}
acf(MySeq, lag.max = 20)
plot(MySeq)
set.seed(1)
b0 = round(runif(1,1.0,5.0),2)
b1 = 1.1
b2 = -0.25
MySeq = rnorm(2)
for (i in 2:1000){
MySeq = append(MySeq, b0+b1*MySeq[i]+b2*MySeq[i-1])
}
acf(MySeq, lag.max = 20)
b0
set.seed(1)
b0 = round(runif(1,1.0,5.0),2)
b1 = 1.1
b2 = -0.25
MySeq = rnorm(2)
for (i in 2:1000){
MySeq = append(MySeq, b0+b1*MySeq[i]+b2*MySeq[i-1])
}
acf(MySeq, lag.max = 20)
b0
b0
set.seed(2)
b0 = round(runif(1,1.0,5.0),2)
b1 = 0.9
b2 = 0.8
b0
MySeq = rnorm(2)
for (i in 2:1000){
MySeq = append(MySeq, b0+b1*MySeq[i]+b2*MySeq[i-1])
}
acf(MySeq, lag.max = 20)
set.seed(2)
b0 = round(runif(1,1.0,5.0),2)
b1 = 0.9
b2 = 0.8
MySeq2 = rnorm(2)
for (i in 2:1000){
MySeq2 = append(MySeq2, b0+b1*MySeq2[i]+b2*MySeq2[i-1])
}
acf(MySeq2, lag.max = 20)
MySeq2
set.seed(2)
b0 = round(runif(1,1.0,5.0),2)
b1 = 0.9
b2 = 0.8
MySeq2 = rnorm(2)
MySeq2
set.seed(3)
b0 = round(runif(1,1.0,5.0),2)
b1 = 0.9
b2 = 0.8
MySeq2 = rnorm(2)
MySeq2
for (i in 2:1000){
MySeq2 = append(MySeq2, b0+b1*MySeq2[i]+b2*MySeq2[i-1])
}
acf(MySeq2, lag.max = 20)
MySeq2
sum(is.na(MySeq))
sum(is.na(MySeq2))
acf(MySeq2, lag.max = 20)
for (i in 2:100){
MySeq2 = append(MySeq2, b0+b1*MySeq2[i]+b2*MySeq2[i-1])
}
acf(MySeq2, lag.max = 20)
set.seed(3)
b0 = round(runif(1,1.0,5.0),2)
b1 = 0.9
b2 = 0.8
MySeq2 = rnorm(2)
for (i in 2:100){
MySeq2 = append(MySeq2, b0+b1*MySeq2[i]+b2*MySeq2[i-1])
}
acf(MySeq2, lag.max = 20)
set.seed(1)
b0 = round(runif(1,1.0,5.0),2)
b1 = 1.1
b2 = -0.25
MySeq1 = rnorm(2)
for (i in 2:100){
MySeq1 = append(MySeq1, b0+b1*MySeq1[i]+b2*MySeq1[i-1])
}
acf(MySeq1, lag.max = 20)
set.seed(3)
b0 = round(runif(1,1.0,5.0),2)
b1 = 0.9
b2 = 0.8
MySeq2 = rnorm(2)
for (i in 2:100){
MySeq2 = append(MySeq2, b0+b1*MySeq2[i]+b2*MySeq2[i-1])
}
acf(MySeq2, lag.max = 20)
setwd("C:/Users/Jiaqi Li/Desktop/hw2 404")
snp = read.csv("sp500_stock_data.csv")
p.all = which(!is.na(snp$PAYDT))
event = snp[p.all,]
n = length(p.all)
pos = vector()
for (i in 2:n)
{
if (snp$TICKER[p.all[i]] != snp$TICKER[p.all[i]-21]
|| snp$TICKER[p.all[i]] != snp$TICKER[p.all[i]+20])
{
pos = append(pos,i)
}
}
p = p.all[-pos]
p = p[-1]
event = event[-pos,]
event = event[-1,]
row_EXR = matrix(0,ncol = 41)
for (i in 1:length(p))
{
row_EXR = rbind(row,as.numeric(as.vector(snp$RETX[(p[i]-20):(p[i]+20)]))
-as.numeric(as.vector(snp$sprtrn[(p[i]-20):(p[i]+20)])))
}
row_EXR = row_EXR[-1,]
row_EXR[is.na(row_EXR)] = 0
mu = vector()
for (i in 1:41) { mu = append(mu,mean(row_EXR[,i]))}
plot(mu, type = "o", main = "Event Study",
ylab = "Excess Return", xlab = "Day")
