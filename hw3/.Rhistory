trend=1:length(lnAAPL)
out = lm(lnAAPL~trend)
#
# get GDP
#
getSymbols("GDPC1",src = "FRED")
#      GDP, qtrly, seasonally adjusted, 2009 $
#      note: this is an xts object not a ts object!
lnGDP=log(GDPC1)
lnGDP
getSymbols("AAPL", src = "FRED")
getSymbols("AAPL", src = "yahoo")
AAPL
str(AAPL)
lnAAPL = log(AAPL$AAPL.Close)
trend=1:length(lnAAPL)str(AAPL)
trend=1:length(lnAAPL)
out = lm(lnAAPL~trend)
acf(out$residuals)
acf(diff(lnAAPL))
lnAAPL = log(AAPL$AAPL.Close)
acf(diff(lnAAPL))
acf(diff(lnAAPL),na.action=na.omit)
?DataAnaylitics
#1--------------------------
#a)
ret.CAPM = 0.05 + 1.4*0.06
print(ret.CAPM)
#b)
p.now = 35
p.next = p.now*(1+ret.CAPM)
print(p.next)
#c)
div = 2
p.div = p.now - 2
print(p.div)
p.div = p.next - div
print(p.div)
#2--------------------------
#a)
b.a = (0.32-0.02)/(0.2-0.05)
b.d = (0.14-0.035)/(0.2-0.05)
print(b.a,b.d)
print(c(b.a,b.d))
#b)
ret.mkt = 0.5*0.05 + 0.5*0.2
ret.a = b.a*ret.mkt
ret.d = b.d*ret.mkt
print(c(ret.a,ret.d))
ret.a = (0.02+0.32)/2
ret.d = (0.035+0.14)/2
print(c(ret.a,ret.d))
#c)
ret.mkt = 0.5*0.05 + 0.5*0.2
print(c(b.a,b.d))
ret.mkt
limit.b = c(0,1)
limit.E = c(0.08, ret.mkt)
plot(limit.b,limit.E, type = "l")
plot(limit.b,limit.E, type = "l",pch = 20)
plot(limit.b,limit.E, type = "l",pch = 50)
?plot
plot(limit.b,limit.E, type = "l")
#d)
points(b.a,ret.a)
points(b.d,ret.d)
b.a
b.d
plot(limit.b,limit.E, type = "l", xlim = c(0,5), ylime = c(0,1))
limit.b = c(0,1)
limit.E = c(0, ret.mkt)
plot(limit.b,limit.E, type = "l", xlim = c(0,5), ylime = c(0,1))
plot(limit.b,limit.E, type = "l", xlim = c(0,5), ylim = c(0,1))
#d)
points(b.a,ret.a)
points(b.d,ret.d)
plot(limit.b,limit.E, type = "l", xlim = c(0,3), ylim = c(0,0.4))
#d)
points(b.a,ret.a)
points(b.d,ret.d)
ret.d
0.0075/b.d
?abline
plot(limit.b,limit.E, type = "l", xlim = c(0,3), ylim = c(0,0.4))
abline(0.08,(ret.d-0.08)/b.d)
ret.d-0.08
ret.d-0.08
(ret.d-0.08)/b.d
abline(ret.mkt,(ret.d-0.08)/b.d)
ret.mkt
abline(0.08,(ret.d-0.08)/b.d)
limit.b
limit.E
abline(0,ret.mkt)
plot(limit.b,limit.E, type = "l", xlim = c(0,3), ylim = c(0,0.4))
abline(0,ret.mkt)
#d)
points(b.a,ret.a)
points(b.d,ret.d)
ret.mkt
abline(0.08,ret.mkt-0.08)
plot(limit.b,limit.E, type = "l", xlim = c(0,3), ylim = c(0,0.4))
abline(0.08,ret.mkt-0.08)
limit.b = c(0,1)
limit.E = c(0.08, ret.mkt)
plot(limit.b,limit.E, type = "l", xlim = c(0,3), ylim = c(0,0.4))
abline(0.08,ret.mkt-0.08)
#d)
points(b.a,ret.a)
points(b.d,ret.d)
?points
ret.CAPM = 0.05 + 1.4*0.06
print(ret.CAPM)
#b)
p.now = 35
p.next = p.now*(1+ret.CAPM)
print(p.next)
#c)
div = 2
p.div = p.next - div
print(p.div)
#2--------------------------
#a)
b.a = (0.32-0.02)/(0.2-0.05)
b.d = (0.14-0.035)/(0.2-0.05)
beta = c(b.a,b.d)
names(beta) = c("aggressive", "defensive")
print(c(b.a,b.d))
#b)
ret.a = (0.02+0.32)/2
ret.d = (0.035+0.14)/2
return = c(ret.a,ret.d)
names(return) = c("aggressive", "defensive")
print(c(ret.a,ret.d))
#c)
ret.mkt = 0.5*0.05 + 0.5*0.2
limit.b = c(0,1)
limit.E = c(0.08, ret.mkt)
plot(limit.b,limit.E, type = "l", xlim = c(0,3), ylim = c(0,0.4))
rf = 0.08
slope = ret.mkt-0.08
abline(rf,slope)
#d)
points(b.a,ret.a, pch = 19)
points(b.d,ret.d, pch = 19)
text(b.a, ret.a, labels = "Aggressive")
text(b.d,ret.d, labels = "Defensive")
a.a = ret.a - (rf+slope*b.a)
a.d = ret.b - (rf+slope*b.d)
alpha = c(a.a,a.d)
names(alpha) = c("aggressive", "defensive")
print(alpha)
plot(limit.b,limit.E, type = "l", xlim = c(0,3), ylim = c(0,0.4))
rf = 0.08
slope = ret.mkt-0.08
abline(rf,slope)
#d)
points(b.a,ret.a, pch = 19)
points(b.d,ret.d, pch = 19)
text(b.a, ret.a, labels = "Aggressive", pos = 3)
text(b.d,ret.d, labels = "Defensive", pos = 1)
a.a = ret.a - (rf+slope*b.a)
a.d = ret.b - (rf+slope*b.d)
alpha = c(a.a,a.d)
names(alpha) = c("aggressive", "defensive")
print(alpha)
plot(limit.b,limit.E, type = "l", xlim = c(0,3), ylim = c(0,0.4),
main = "Security Market Line")
rf = 0.08
slope = ret.mkt-0.08
abline(rf,slope)
#d)
points(b.a,ret.a, pch = 19)
points(b.d,ret.d, pch = 19)
text(b.a, ret.a, labels = "Aggressive", pos = 3)
text(b.d,ret.d, labels = "Defensive", pos = 1)
a.a = ret.a - (rf+slope*b.a)
a.d = ret.b - (rf+slope*b.d)
alpha = c(a.a,a.d)
names(alpha) = c("aggressive", "defensive")
print(alpha)
setwd("C:/Users/Jiaqi Li/Desktop/404/hw3")
library(readxl)
library(lubridate)
data = read_excel("data.xlsx")
data = data[complete.cases(data),]
sum(is.na(data$`Value-Weighted Return-incl. dividends`))
data$MC = abs(data$`Price or Bid/Ask Average`)*data$`Shares Outstanding`
test = data[order(data$PERMNO),]
test$`Names Date` = as.Date(as.character(test$`Names Date`), format = "%Y%m%d")
n = length(data$PERMNO)
nS = length(unique(test$PERMNO))
len = vector()
sep = vector()
name = vector()
MC = vector()
Year = vector()
CU = vector()
TIC = vector()
PERM = vector()
mc = test$MC[1]
X = 1+test$`Value-Weighted Return-incl. dividends`[1]
count = 1
for (i in 1:(n-1))
{
if (test$PERMNO[i+1] == test$PERMNO[i] &&
year(test$`Names Date`[i+1]) == year(test$`Names Date`[i]))
{
X = X*(1+test$`Value-Weighted Return-incl. dividends`[i+1])
count = count + 1
mc = mc + test$MC[i+1]
}
else
{
len = append(len,count)
Y = X^(12/count)-1
sep = append(sep,Y)
name = append(name,test$`Ticker Symbol`[i])
MC = append(MC, mc/count)
Year = append(Year,year(test$`Names Date`[i+1]))
#CU = append(CU, test$`CUSIP Header`[i+1])
#TIC = append(TIC, test$`Ticker Symbol`)
#PERM = append(PERM, test$PERMNO)
X = 1 + test$`Value-Weighted Return-incl. dividends`[i+1]
count = 1
mc = test$MC[i+1]
}
}
all = data.frame(Year,name,MC,sep)
hist(sep)
summary(sep)
summary(MC)
all = data.frame(Year,name,MC/1000,sep)
hist(sep)
summary(sep)
summary(MC)
summary(MC/100)
summary(MC/1000)
data = read_excel("data_holding.xlsx")
data = data[complete.cases(data),]
data = read_excel("data_holding.xlsx")
data = data[complete.cases(data),]
data$MC = abs(data$`Price or Bid/Ask Average`)*data$`Shares Outstanding`
test = data[order(data$PERMNO),]
test$`Names Date` = as.Date(as.character(test$`Names Date`), format = "%Y%m%d")
n = length(data$PERMNO)
nS = length(unique(test$PERMNO))
len = vector()
sep = vector()
name = vector()
MC = vector()
Year = vector()
CU = vector()
TIC = vector()
PERM = vector()
X = 1+test$Returns[1]
head(test)
X = 1+test$Returns[1]
head(test)
head(returns)
head(test$Returns)
test$Returns[1]
1+test$Returns[1]
X
count = 1
names(test)
count = 1
for (i in 1:(n-1))
{
if (test$PERMNO[i+1] == test$PERMNO[i] &&
year(test$`Names Date`[i+1]) == year(test$`Names Date`[i]))
{
X = X*(1+test$Returns[i+1])
count = count + 1
mc = mc + test$MC[i+1]
}
else
{
len = append(len,count)
Y = X^(12/count)-1
sep = append(sep,Y)
name = append(name,test$`Ticker Symbol`[i])
MC = append(MC, mc/count)
Year = append(Year,year(test$`Names Date`[i+1]))
#CU = append(CU, test$`CUSIP Header`[i+1])
#TIC = append(TIC, test$`Ticker Symbol`)
#PERM = append(PERM, test$PERMNO)
X = 1 + test$Returns[i+1]
count = 1
mc = test$MC[i+1]
}
}
mc = test$MC[1]
count = 1
for (i in 1:(n-1))
{
if (test$PERMNO[i+1] == test$PERMNO[i] &&
year(test$`Names Date`[i+1]) == year(test$`Names Date`[i]))
{
X = X*(1+test$Returns[i+1])
count = count + 1
mc = mc + test$MC[i+1]
}
else
{
len = append(len,count)
Y = X^(12/count)-1
sep = append(sep,Y)
name = append(name,test$`Ticker Symbol`[i])
MC = append(MC, mc/count)
Year = append(Year,year(test$`Names Date`[i+1]))
#CU = append(CU, test$`CUSIP Header`[i+1])
#TIC = append(TIC, test$`Ticker Symbol`)
#PERM = append(PERM, test$PERMNO)
X = 1 + test$Returns[i+1]
count = 1
mc = test$MC[i+1]
}
}
all = data.frame(Year,name,MC/1000,sep)
hist(sep)
summary(sep)
summary(MC/1000)
head(MC)
class(MC)
class(test$MC)
head(test$MC, 15)
sum(head(test$MC, 12))/12
test$`Ticker Symbol`
head(test$`Ticker Symbol`)
quantile(0,1,0.0025)
quantile(0,1,0.05)
?quantile
quantile(sep,probs = seq(0,1,0.0025))
quant = quantile(sep,probs = seq(0,1,0.0025))
quant
quant[1]
quant[2]
quant[length(quant)-1]
quant = quantile(sep, probs = seq(0,1,0.0025))
ideal = sep[which(sep>quant[2]) && sep<quant[length(quant)-1]]
length(ideal)
ideal
all = data.frame(Year,name,MC/1000,sep)[which(sep>quant[2]) && sep<quant[length(quant)-1],]
length(all$sep)
hist(sep)
hist(all)
hist(all$sep)
length(sep)
which(sep>quant[2])
all = data.frame(Year,name,MC/1000,sep)[which(sep>quant[2]),]
all = all[sep<quant[length(quant)-1],]
length(all)
sep<quant[length(quant)-1]
all = data.frame(Year,name,MC/1000,sep)[which(sep>quant[2]),]
length(all)
length(all$sep)
all = all[which(sep<quant[length(quant)-1]),]
all = all[which(all$sep < quant[length(quant)-1]),]
length(all$sep)
hist(all$sep)
summary(all$sep)
hist(all$sep,breaks = 30)
hist(all$sep,breaks = 30)
hist(all$sep,breaks = 30)
hist(all$sep,breaks = 60)
?write.csv
summary(all$sep)
sd(all$sep)
write.csv(all, file = "data summary.csv")
head(all$sep,15)
head(all$MC.1000,15)
library(moment)
install.packages("moment")
install.packages("moments")
library(moments)
options(warn = -1)
library(readxl)
library(lubridate)
library(moments)
data = read_excel("data_holding.xlsx")
data = data[complete.cases(data),]
data$MC = abs(data$`Price or Bid/Ask Average`)*data$`Shares Outstanding`
test = data[order(data$PERMNO),]
test$`Names Date` = as.Date(as.character(test$`Names Date`), format = "%Y%m%d")
n = length(data$PERMNO)
nS = length(unique(test$PERMNO))
len = vector()
sep = vector()
name = vector()
MC = vector()
Year = vector()
mc = test$MC[1]
X = 1+test$Returns[1]
count = 1
for (i in 1:(n-1))
{
if (test$PERMNO[i+1] == test$PERMNO[i] &&
year(test$`Names Date`[i+1]) == year(test$`Names Date`[i]))
{
X = X*(1+test$Returns[i+1])
count = count + 1
mc = mc + test$MC[i+1]
}
else
{
len = append(len,count)
Y = X^(12/count)-1
sep = append(sep,Y)
name = append(name,test$`Ticker Symbol`[i])
MC = append(MC, mc/count)
Year = append(Year,year(test$`Names Date`[i+1]))
X = 1 + test$Returns[i+1]
count = 1
mc = test$MC[i+1]
}
}
full = data.frame(Year,name,MC/1000,sep)
quant = quantile(sep, probs = seq(0,1,0.0025))
effect = data.frame(Year,name,MC/1000,sep)[which(sep>quant[2]),]
effect = effect[which(all$sep < quant[length(quant)-1]),]
write.csv(effect, file = "data summary.csv")
hist(effect$sep,breaks = 60)
summary(effect$sep)
summary(effect$MC /1000)
Mstd = sd(effect$sep)
Mm = mean(effect$sep)
Mom = kurtosis(effect$sep)
Kurt = kurtosis(effect$sep)
stat = data.frame(Mm, Mstd, Skew, Kurt)
names(stat) = c("Mean", "Standard Deviation", "Kurtosis", "Skewness")
print(stat)
Mstd = sd(effect$sep)
Mm = mean(effect$sep)
Skew = Skewness(effect$sep)
Kurt = kurtosis(effect$sep)
stat = data.frame(Mm, Mstd, Skew, Kurt)
names(stat) = c("Mean", "Standard Deviation", "Kurtosis", "Skewness")
print(stat)
?skewness
Mstd = sd(effect$sep)
Mm = mean(effect$sep)
Skew = skewness(effect$sep)
Kurt = kurtosis(effect$sep)
stat = data.frame(Mm, Mstd, Skew, Kurt)
names(stat) = c("Mean", "Standard Deviation", "Kurtosis", "Skewness")
print(stat)
full = data.frame(Year,name,MC/1000,sep)
quant = quantile(sep, probs = seq(0,1,0.0025))
effect = data.frame(Year,name,MC/1000,sep)[which(sep>quant[2]),]
effect = effect[which(all$sep < quant[length(quant)-1]),]
write.csv(effect, file = "data summary.csv")
hist(effect$sep,breaks = 60)
summary(effect$sep)
summary(effect$MC /1000)
summary(effect$sep)
head(effect$sep)
quant = quantile(sep, probs = seq(0,1,0.01))
effect = data.frame(Year,name,MC/1000,sep)[which(sep>quant[2]),]
effect = effect[which(all$sep < quant[length(quant)-1]),]
write.csv(effect, file = "data summary.csv")
hist(effect$sep,breaks = 60)
summary(effect$sep)
quant = quantile(sep, probs = seq(0,1,0.1))
effect = data.frame(Year,name,MC/1000,sep)[which(sep>quant[2]),]
effect = effect[which(all$sep < quant[length(quant)-1]),]
write.csv(full, file = "data summary.csv")
hist(effect$sep,breaks = 60)
quant[2]
quant[length(quant)-1]
effect = data.frame(Year,name,MC/1000,sep)[which(sep>-0.9385828),]
effect = effect[which(all$sep < 8.1856168),]
hist(effect$sep,breaks = 60)
plot(effect$sep)
quant = quantile(sep, probs = seq(0,1,0.01))
quant[2]
quant = quantile(sep, probs = seq(0,1,0.005))
quant[2]
quant = quantile(sep, probs = seq(0,1,0.01))
quant[length(quant)-1]
tail(quant)
effect = sep[which(sep>quant[2])]
effect = effect[which(all$sep < 8.1856168)]
hist(effect$sep,breaks = 60)
hist(effect,breaks = 60)
hist(effect,breaks = 60)
summary(effect)
effect = sep[sep>quant[2]]
effect = effect[all$sep < 8.1856168]
hist(effect,breaks = 60)
summary(effect)
plot(sep)
quant[2]
effect = sep[which(sep>(-0.9385828))]
effect = effect[which(all$sep < 8.1856168)]
hist(effect,breaks = 60)
summary(effect)
effect = sep[which(sep>(-0.9385828))]
effect = effect[which(effect < 8.1856168)]
hist(effect,breaks = 60)
summary(effect)
Mstd = sd(effect)
Mm = mean(effect)
Kurt = kurtosis(effect)
Skew = skewness(effect)
stat = data.frame(Mm, Mstd, Skew, Kurt)
names(stat) = c("Mean", "Standard Deviation", "Kurtosis", "Skewness")
print(stat)
stat = data.frame(Mm, Mstd, Kurt, Skew)
names(stat) = c("Mean", "Standard Deviation", "Kurtosis", "Skewness")
print(stat)
summary(effect)
